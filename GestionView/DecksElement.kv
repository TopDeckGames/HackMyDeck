#:kivy 1.8
#:import kivy kivy

<DecksElement>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        spacing: "20dp"
        padding: ("20dp", "20dp")

        BoxLayout:
            size_hint: (1, 0.1)
            orientation: "horizontal"

            Button:
                text: "Nouveau deck"
                size: ("200dp", "50dp")
                size_hint: (None, None)
                on_release: root.showCreatePopup()

            Button:
                text: "Charger"
                size: ("200dp", "50dp")
                size_hint: (None, None)
                on_release: root.showLoadingPopup()

            Button:
                id: cmdSave
                text: "Enregistrer"
                size: ("200dp", "50dp")
                size_hint: (None, None)
                opacity: 0

        BoxLayout:
            size_hint: (1, 0.9)
            orientation: "horizontal"
            spacing: "10dp"
            padding: ("10dp", "10dp")
            opacity: 1 if root.deck else 0

            canvas.after:
                Color:
                    rgba: 0, 0, 0, 1
                Line:
                    points: [self.pos[0], self.pos[1], self.pos[0], self.pos[1] + self.size[1], self.pos[0] + self.size[0], self.pos[1] + self.size[1], self.pos[0] + self.size[0], self.pos[1], self.pos[0], self.pos[1]]
                    width: 1
            canvas.before:
                Color:
                    rgba: 0.9, 0.9, 0.9, 1
                Rectangle:
                    size: self.size
                    pos: self.pos

            BoxLayout:
                size_hint: (0.2, 1)
                orientation: "vertical"

                Image:
                    canvas.after:
                        Color:
                            rgba: 0, 0, 0, 1
                        Line:
                            points: [self.pos[0], self.pos[1], self.pos[0], self.pos[1] + self.size[1], self.pos[0] + self.size[0], self.pos[1] + self.size[1], self.pos[0] + self.size[0], self.pos[1], self.pos[0], self.pos[1]]
                            width: 1

                    size_hint: (1, 0.4)
                    allow_stretch: True
                    keep_ratio: False
                    source: "Images/Leaders/" + str(root.deck.leader.id) + ".jpg" if root.deck else ""

                Label:
                    text: root.deck.leader.name if root.deck else ""
                    size_hint: (1, 0.05)
                    halign: "center"
                    color: [0, 0, 0, 1]
                    bold: True

                Image:
                    opacity: 0
                    size_hint: (1, 0.15)

                RstDocument:
                    text: root.deck.leader.description if root.deck else ""
                    size_hint: (1, 0.4)
                    halign: "justify"

            BoxLayout:
                canvas.after:
                    Color:
                        rgba: 0, 0, 0, 1
                    Line:
                        points: [self.pos[0], self.pos[1], self.pos[0], self.pos[1] + self.size[1], self.pos[0] + self.size[0], self.pos[1] + self.size[1], self.pos[0] + self.size[0], self.pos[1], self.pos[0], self.pos[1]]
                        width: 1

                size_hint: (0.5, 1)

            RelativeLayout:
                size_hint: (0.05, 1)

                BoxLayout:
                    orientation: "vertical"
                    size_hint: (1, None)
                    height: "100dp"
                    spacing: "20dp"
                    pos_hint: {"center_x": 0.5, "center_y": 0.5}

                    Button:
                        text: ">"
                        size_hint: (1, 0.5)

                    Button:
                        text: "<"
                        size_hint: (1, 0.5)

            BoxLayout:
                canvas.after:
                    Color:
                        rgba: 0, 0, 0, 1
                    Line:
                        points: [self.pos[0], self.pos[1], self.pos[0], self.pos[1] + self.size[1], self.pos[0] + self.size[0], self.pos[1] + self.size[1], self.pos[0] + self.size[0], self.pos[1], self.pos[0], self.pos[1]]
                        width: 1

                size_hint: (0.25, 1)

                ScrollView:
                    size_hint: (1, 1)
                    do_scroll_x: False

                    GridLayout:
                        id: deckCards
                        cols: 1
                        spacing: 20
                        size_hint_y: None

<LoadPopup>:
    title: "Charger un deck"
    size: ("400dp", "100dp")
    size_hint: (None, None)

    BoxLayout:
        orientation: "horizontal"
        size_hint: (1, 1)
        spacing: "10dp"

        Spinner:
            id: decksList
            size_hint: (0.7, 1)
            values: root.items

        Button:
            size_hint: (0.3, 1)
            text: "Charger"
            on_release: root.load()

<CreatePopup>:
    title: "Créer un nouveau deck"
    size: ("400dp", "200dp")
    size_hint: (None, None)

    GridLayout:
        cols: 2
        size_hint: (1, 1)
        spacing: "10dp"

        Label:
            text: "Nom"
            size_hint: (1, 1)

        TextInput:
            id: name
            size_hint: (1, 1)

        Label:
            text: "Leader"
            size_hint: (1, 1)

        Spinner:
            id: leadersList
            size_hint: (1, 1)
            values: root.items

        Button:
            text: "Annuler"
            size_hint: (1, 1)
            on_release: root.dismiss()

        Button:
            text: "Créer"
            size_hint: (1, 1)
            on_release: root.create()

<DeckCard>:
    text: root.card.name
    size_hint_y: None
    height: 40